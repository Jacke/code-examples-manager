code-examples-manager-config {
  meta-info {
    // populated externally during the build
  }
  examples {
    // comma separated list of paths where to search recursively for examples
    search-root-directories = ""
    search-root-directories = ${?CEM_SEARCH_ROOTS}
    // search expression, select example files to look for publish instructions
    search-glob = "**/*.{sc,sh,md,drl,jsh,service,conf,ttl,service,timer,py,jl,java,scala,graphql}"
    search-glob = ${?CEM_SEARCH_GLOB}
  }
  // each adapter is taken into account if and only if enabled is true && token is defined
  publish-adapters {
    // default configuration for github.com
    github-com-gists {
      enabled = true
      kind = "github"
      activation-keyword = "gist"
      api-end-point = "https://api.github.com"
      graphql-end-point = "https://api.github.com/graphql" // TODO - IN STANDBY - MISSING FEATURES IN GITHUB GRAPHQL :(
      graphql-schema = "https://docs.github.com/public/schema.docs.graphql" // TODO just informative for now
      overview-uuid = "cafacafe-cafecafe"
      token = ${?CEM_GITHUB_TOKEN}
      filename-rename-rules {}
    }
    // default configuration for gitlab.com
    gitlab-com-snippets {
      enabled = true
      kind = "gitlab"
      activation-keyword = "snippet"
      api-end-point = "https://gitlab.com/api/v4"
      graphql-end-point = "https://gitlab.com/api/graphql" // TODO - IN STANDBY - GENERATED CODE FROM SCHEMA IS TOO BIG...
      graphql-schema = "https://github.com/gitlabhq/gitlabhq/blob/master/doc/api/graphql/reference/gitlab_schema.graphql" // TODO just informative for now
      overview-uuid = "cafecafe-cafe-cafe-cafe-cafecafecafe"
      default-visibility = "public"
      token = ${?CEM_GITLAB_TOKEN}
      filename-rename-rules {
        scala-files { // rename .sc scala file to an extension known by gitlab (for colorization)
          from = "^(.*)[.]sc$"
          to = "$1.scala"
        }
        java-files { // rename .jsh java file to an extension known by gitlab (for colorization)
          from = "^(.*)[.]jsh$"
          to = "$1.java"
        }
      }
    }
  }
}